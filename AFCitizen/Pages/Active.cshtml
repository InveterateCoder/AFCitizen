@page
@model AFCitizen.Pages.ActiveModel
@{
    Layout = "_Layout";
}
    <div class="container">
        <div class="jumbotron">
            <h1>@Model.Header</h1>
            <p>Активные Обращения</p>
        </div>
        @if (Model.OpenBlocks.Count() > 0)
        {
            List<AFCitizen.Models.Block> list = new List<AFCitizen.Models.Block>();
            int i = 0;
            <div id="accordion">
                @foreach (var block in Model.OpenBlocks.Where(b => b.Type == AFCitizen.Models.BlockType.Open && !list.Any(bl => b.Id == bl.Id)).OrderBy(o => o.TimeStamp))
                {
                    i++;
                    string closed = null;
                    int lastType = int.MaxValue;
                    AFCitizen.Models.Document doc = (AFCitizen.Models.Document)Newtonsoft.Json.JsonConvert.DeserializeObject(block.Document, typeof(AFCitizen.Models.Document));
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="@($"#collapse{i.ToString()}")">
                                Кому: @block.To / Дата: @block.TimeStamp.ToString()
                            </a>
                        </div>
                        <div id="@($"collapse{i.ToString()}")" class="collapse hide" data-parent="#accordion">
                            <div class="card-body">
                                <h3 class="text-center">@doc.Type</h3>
                                <p>@doc.Text</p>
                                @foreach (var exblock in Model.OpenBlocks.Where(b => b.DocId == block.DocId && b != block).OrderByDescending(o => o.TimeStamp))
                                {
                                    <hr />
                                    <h5>От: @exblock.From / Кому: @exblock.To</h5>
                                    @switch (exblock.Type)
                                    {
                                        case AFCitizen.Models.BlockType.Redirect:
                                            lastType = (int)AFCitizen.Models.BlockType.Redirect;
                                            <h5 class="text-success">Перенаправление</h5>
                                            AFCitizen.Models.Redirect red = (AFCitizen.Models.Redirect)Newtonsoft.Json.JsonConvert.DeserializeObject(exblock.TypeMessage, typeof(AFCitizen.Models.Redirect));
                                            <p><strong>Кому:</strong> @red.To</p>
                                            <p><strong>Комментарий:</strong> @red.Comment</p>
                                            break;
                                        case AFCitizen.Models.BlockType.Accept:
                                            lastType = (int)AFCitizen.Models.BlockType.Accept;
                                            AFCitizen.Models.Accept assign = (AFCitizen.Models.Accept)Newtonsoft.Json.JsonConvert.DeserializeObject(exblock.TypeMessage, typeof(AFCitizen.Models.Accept));
                                            <h5 class="text-success">Принято на рссмотрение</h5>
                                            <p><strong>Должностное лицо:</strong> @assign.AgentFullName</p>
                                            <p><strong>Должность:</strong> @assign.Position</p>
                                            break;
                                        case AFCitizen.Models.BlockType.Open:
                                            lastType = (int)AFCitizen.Models.BlockType.Open;
                                            <h5 class="text-success">Обжалование ответа</h5>
                                            list.Add(exblock);
                                            break;
                                        case AFCitizen.Models.BlockType.Close:
                                            lastType = (int)AFCitizen.Models.BlockType.Close;
                                            if (exblock.isClosed)
                                            {
                                                closed = "Закрыт";
                                            }
                                            else
                                            {
                                                closed = "Ожидается подтверждение о закрытии";
                                            }
                                            AFCitizen.Models.Reply[] replies = (AFCitizen.Models.Reply[])Newtonsoft.Json.JsonConvert.DeserializeObject(exblock.Replies, typeof(AFCitizen.Models.Reply[]));
                                            var reply = replies.Where(rep => rep.From == exblock.From).FirstOrDefault();
                                            <h5 class="text-success">Ответ</h5>
                                            <p><strong>Кому:</strong> @reply.To</p>
                                            <p><strong>Должностное Лицо:</strong> @reply.AgentFullName</p>
                                            <p><strong>Должность:</strong> @reply.Position</p>
                                            <p><strong>Ответ:</strong> @reply.Body</p>
                                            <p><strong>Коментарий:</strong> @reply.Comment</p>
                                            break;
                                    }
                                }
                            </div>
                            <div class="card-footer">
                                @switch (lastType)
                                {
                                    case (int)AFCitizen.Models.BlockType.Redirect:
                                        <button class="btn btn-outline-primary btn-block">Отправить на новый адрес</button>
                                        <button class="btn btn-outline-danger btn-block">Закрыть</button>
                                        break;
                                    case (int)AFCitizen.Models.BlockType.Accept:
                                        <p class="text-info">Ожидается ответ</p>
                                        break;
                                    case (int)AFCitizen.Models.BlockType.Open:
                                        <p class="text-info">Ответ отправлен на обжалование, ожидается ответ</p>
                                        break;
                                    case (int)AFCitizen.Models.BlockType.Close:
                                        if (closed == "Закрыт")
                                        {
                                            <p class="text-info">Закрыт</p>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-primary btn-block">Обжаловать</button>
                                            <button class="btn btn-outline-danger btn-block">Закрыть</button>
                                        }
                                        break;
                                    default:
                                        <p class="text-info">Ожидается ответ</p>
                                        break;
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
